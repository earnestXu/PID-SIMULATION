__author__ = 'Earnest'
from Tkinter import *
import matplotlib.pyplot as plt
import string
import sqlite3

root = Tk()
root.geometry('700x500+0+0')
root.title('PID Simulation')


CX=0




def ClearDataBase():        #清除数据库
    
    global CX
    conn.execute("DROP TABLE PIDData")
    DataBaseState=0
    CX=CX-1
    C1.deselect()
    st.set("DB CLEAR SUCCESSFULLY")

    


#def DataBaseUsage():                                            #使用数据库
#    s+=1
#    c=s%(int(T1/T/70))
#   if (c==0):
#       conn.execute("INSERT INTO PIDData(TS, PHASE) VALUES(?,?)",(ts,Y))
#        conn.commit()


def callCheckbutton():
    global CX,conn
    #z=v.get()
    #print "%d", z
    if v.get()==1 :
        #DataBaseState=1
        CX=CX+1
        conn=sqlite3.connect('D:\\pythoncode/pypyodbc\PIDData.db')      #连接数据库
        st.set("Opened database successfully")
        conn.execute('''CREATE TABLE PIDData(TS      REAL,
        PHASE   REAL);''')
        st.set("Table created successfully")

def ReplayCurve():
    A=[]
    B=[]
    plt.figure(2)
    cursor=conn.execute("SELECT TS, PHASE from PIDData")
    for row in cursor:
        #print row[0], row[1]
        #plt.plot(row[0],row[1],'o')
        A=A+[row[0]]
        B=B+[row[1]]
        #print "OUTPUT Successfully"
    #plt.plot(cursor.fetchall())
    plt.plot(A,B)
    st.set("REPLAY LAST CURVE SUCCESSFULLY")
    plt.show()
def windowClose():
    root.destroy()

    
def PID_ALGORITHM():
    #parameter setting :Kp, TI, TD, CurErr, LstErr,\
    #           LLstErr, Ti, T”’
    st.set("PID SIMULATING PROCESSING....")
    global CX
    print CX
    if CX == 1:
        B1['state'] = NORMAL
        B2['state'] = NORMAL
    else:
        B1['state'] = DISABLED
        B2['state'] = DISABLED
    text1=E1.get()
    text2=E2.get()
    text3=E3.get()
    text4=E4.get()
    text5=E5.get()
    Kp = float(text1)
    Ti = float(text2)
    Td = float(text3)
    AIM=1.0
    LstErr=0.0
    LLstErr=0.0
    CurErr=0.0
    T=float(text4)
    T1=float(text5)
    p=0.0
    Y=0.0
    Y1=0.0
    Dp=0.0
    m=[]
    n=[]
    s=0
    for i in range(int(T1/T)):
        LLstErr=LstErr
        LstErr=CurErr
        CurErr=AIM-Y
        Ki=Kp*T/Ti
        Kd=Kp*Td/T
        Dp=Kp*(CurErr-LstErr)+Ki*CurErr+Kd*(CurErr-2*LstErr+LLstErr)
        p=Dp+p
        Y=(T/T1)*p-(T/T1-1)*Y1
        ts=T*i
        m=m+[ts]
        Y1=Y
        n=n+[Y]
        s+=1
        c=s%(int(T1/T/70))
        if ((c==0) & (CX == 1)):
            conn.execute("INSERT INTO PIDData(TS, PHASE) VALUES(?,?)",(ts,Y))
            conn.commit()
            st.set("Datats insert successfully!")
            
        #if (abs(Dp)/T < 0.0000001) | (abs(p-1)< 0.01):
        #   break
    st3.set(round((max(n)-1)*100,2))
    st1.set(round(T*(1+n.index(max(n))),5))
    k=len(n)-1
    while((n[k]>0.98)&(n[k]<1.02)):
        k=k-1
    st2.set(round(m[k],4))

    #st2.set()
    plt.figure(1)
    plt.plot(m,n)
    st.set("PID CURVE PLOT SUCCESSFULLY!")
    plt.show()

    


F1 = Frame(root, bg='red', height=150, width=250,bd=3, relief=RAISED)
F1.place(x=30, y=30)
L0 = Label(F1,text='PID parameter settings')
L0.place(x=0,y=0)
L1 = Label(F1, text='Kp', bg='pink', relief=RAISED)
L1.place(x=20, y=50, width=35, anchor=CENTER)
L2 = Label(F1, text='Ki', bg='pink', relief=RAISED)
L2.place(x=20,y=73,width=35,anchor=CENTER)
L3 = Label(F1, text='Kd', bg='pink', relief=RAISED)
L3.place(x=20, y=96, width=35, anchor=CENTER)
#global E1,E2,E3,E4,E5
E1= Entry(F1, bg='blue', width=10)
E1.place(x=40, y=40)
E2 = Entry(F1, bg='blue',width=10)
E2.place(x=40, y=62)
E3 = Entry(F1, bg='blue', width=10)
E3.place(x=40, y=84)

F2 = Frame(root, bg='yellow', height=150, width=250,bd=3, relief=RAISED)
F2.place(x=30, y=180)
L4 = Label(F2, text='One Step System parameter')
L4.place(x=0,y=0)
L5 = Label(F2, text='T', bg='pink', relief=RAISED)
L5.place(x=20, y=50, width=35, height=30, anchor=CENTER)
E4 = Entry(F2, bg='blue', width=10)
E4.place(x=40, y=35,height=30)
L6 = Label(F2, text='T1', bg='pink', relief=RAISED)
L6.place(x=20, y=80, width=35, height=30,anchor=CENTER)
E5 = Entry(F2, bg='blue', width=10)
E5.place(x=40, y=65, height=30)

F3=Frame(root, bg='green', height=150, width=250,bd=3, relief=RAISED)
F3.place(x=30, y=320)
L7= Label(F3, text='Characteristic Value Output')
L7.place(x=0,y=0)

st1=StringVar()
st2=StringVar()
st3=StringVar()
L8=Label(F3,text='Tp',width=5,bg='red',relief=RAISED)
L8.place(x=20,y=50,anchor=CENTER)
E6=Label(F3,bg='blue',width=10,textvariable=st1)
E6.place(x=80,y=50,anchor=CENTER)

L8=Label(F3,text='Ts',width=5,bg='red',relief=RAISED)
L8.place(x=20,y=74,anchor=CENTER)
E7=Label(F3,bg='blue',width=10,textvariable=st2)
E7.place(x=80,y=74,anchor=CENTER)

L9=Label(F3,text='P.O%',width=5,bg='red',relief=RAISED)
L9.place(x=20,y=98,anchor=CENTER)
E8=Label(F3,bg='blue',width=10,textvariable=st3)
E8.place(x=80,y=98,anchor=CENTER)

#Limage = Label(root, text='One Step System parameter',width=70,height=30,\
#               bg='pink',bd=3, relief=RAISED,image=im)
#Limage.place(x=300,y=0)
st=StringVar()
L10=Label(root,textvariable=st,bg='pink',relief=RAISED,width=50,height=15)
st.set("PID SIMELATION DESKTOP")
L10.place(x=500,y=160,anchor=CENTER)


v=IntVar()
C1=Checkbutton(root,variable = v,text = 'USE SQLite DATABASE',command=callCheckbutton)
C1.pack()
B0 = Button(root,text='SIMULATING',bg='green',bd=4,relief=RAISED,command=PID_ALGORITHM)
B0.place(x=400,y=330,width=150, anchor=CENTER)
B1 = Button(root,text='REPLAY LAST CURVE',bg='red',bd=4,relief=RAISED,command=ReplayCurve)
B1.place(x=560,y=330,width=150, anchor=CENTER)
B2 = Button(root,text='CLEAR OUT THE TABLE',bg='blue',bd=4,relief=RAISED,command=ClearDataBase)
B2.place(x=400,y=380,width=150, anchor=CENTER)
B3 = Button(root,text='EXIT',bg='yellow',bd=4,relief=RAISED,command=windowClose)
B3.place(x=560,y=380,width=150, anchor=CENTER)
    

root.mainloop()